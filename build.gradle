buildscript {
    ext.kotlin_version = '1.3.50'
    ext.kotlinVersion = '1.3.50'
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.3"
        classpath 'com.android.tools.build:gradle:3.3.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
}


allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: 'kotlin'
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: 'maven'
    apply plugin: 'jacoco'
    version = '1.0'
    ext {
        appName = "SW - Client"
        gdxVersion = '1.9.8'
        roboVMVersion = '2.3.5'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        google()
        maven { url "http://repo1.maven.org/maven2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url("https://dl.bintray.com/s1m0nw1/KtsRunner") }
    }
}
subprojects {
    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.50"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    }
    test.useTestNG()
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}


task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets((SourceSet)it.sourceSets["main"])
    }

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled true
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}

repositories {
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}